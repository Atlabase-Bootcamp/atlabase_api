// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  user_id     String     @id @default(uuid())
  username    String     @unique
  password String
  first_name  String
  last_name   String
  email       String     @unique
  created_at  DateTime   @default(now())
  customers   Customer[] 

  @@map("users")
}

model Customer {
  customer_id   String    @id @default(uuid())
  name          String
  email         String?   @unique
  phone_number  String?   @unique
  notes         String?
  created_at    DateTime  @default(now())
  
  user_id       String    
  user          User      @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  projects      Project[] 

  @@map("customers")
}

model Project {
  project_id         String    @id @default(uuid())
  title              String
  description        String?
  start_date         DateTime?
  estimated_end_date DateTime?

  customer_id        String    
  customer           Customer  @relation(fields: [customer_id], references: [customer_id], onDelete: Cascade)
  status_id          String    
  status             Status    @relation(fields: [status_id], references: [status_id])

  tasks              Task[]

  @@map("projects")
}

model Task {
  task_id      String    @id @default(uuid())
  title        String
  description  String?

  status_id    String    
  status       Status    @relation(fields: [status_id], references: [status_id])

  project_id   String    
  project      Project   @relation(fields: [project_id], references: [project_id], onDelete: Cascade)

  @@map("tasks")
}

model Status {
  status_id   String    @id @default(uuid())
  status_name String    @unique
  // "project" o "task"
  applies_to  String 

  projects    Project[] 
  tasks       Task[]   

  @@map("statuses")
}